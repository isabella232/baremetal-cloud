#!/bin/bash

ONHOST="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
. ${ONHOST}/setup/boot-device

sgdisk -Z ${BOOT_DEVICE}
parted ${BOOT_DEVICE} --script mktable gpt
parted ${BOOT_DEVICE} --script mkpart EFI fat16 1MiB 10MiB
parted ${BOOT_DEVICE} --script mkpart boot ext4 10MiB 3GiB
parted ${BOOT_DEVICE} --script mkpart root ext4 3GiB 64GiB
parted ${BOOT_DEVICE} --script set 1 msftdata on
parted ${BOOT_DEVICE} --script set 2 legacy_boot on
sleep 5 # these seem to be necessary
partprobe ${BOOT_DEVICE}
sleep 5 # these seem to be necessary

PARTITION_EFI=${BOOT_DEVICE}${PARTITON_PREFIX}1
PARTITION_BOOT=${BOOT_DEVICE}${PARTITON_PREFIX}2
PARTITION_ROOT=${BOOT_DEVICE}${PARTITON_PREFIX}3

mkfs.vfat -R 2 -S 512 -n EFI ${PARTITION_EFI}
mkfs.ext4 -F -L boot ${PARTITION_BOOT}
mkfs.ext4 -F -L root ${PARTITION_ROOT}

# /
mkdir -p ${BAREMETAL_ROOT}
mount ${PARTITION_ROOT} ${BAREMETAL_ROOT}

# /boot
mkdir -p ${BAREMETAL_ROOT}/boot
mount ${PARTITION_BOOT} ${BAREMETAL_ROOT}/boot

# /efi
mkdir -p ${BAREMETAL_ROOT}/efi
mount -t vfat ${PARTITION_EFI} ${BAREMETAL_ROOT}/efi

# fstab
mkdir -p ${BAREMETAL_ROOT}/etc
cat <<E=O=F >${BAREMETAL_ROOT}/etc/fstab
UUID=$(blkid -s UUID -o value ${PARTITION_ROOT})	/	ext4	defaults	0 1
UUID=$(blkid -s UUID -o value ${PARTITION_BOOT})	/boot	ext4	defaults	1 2
${PARTITION_EFI}					/efi	vfat	defaults	0 0
E=O=F

cat ${BAREMETAL_ROOT}/etc/fstab
